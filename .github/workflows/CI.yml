name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions: {}

jobs:
  test:
    name: Provider Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        go-version: ["1.24"]

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Check docs are up-to-date
        run: go generate . && git diff --exit-code
      - name: Check code formatting
        run: if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then echo "Code is not formatted with gofmt. Run gofmt -w ."; exit 1; fi
      - name: Check go mod tidy
        run: go mod tidy && git diff --exit-code go.mod go.sum
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7 # zizmor: ignore[unpinned-uses]
        with:
          version: latest
          args: -D errcheck -D staticcheck
      - name: Test
        env:
          TF_ACC: "1"
        run: go test --race --covermode atomic --coverprofile=full-report.cov ./...
      - name: Trim coverage reporting for generated code
        run: cat full-report.cov | grep -v ".gen.go" > report.cov
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.3.4 # zizmor: ignore[unpinned-uses]
        with:
          file: report.cov
          format: golang
